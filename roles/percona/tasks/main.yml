- name: PERCONA | Installing percona repo rpm
  yum:
    name: http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm
  ignore_errors: yes

- name: PERCONA | Installing PerconaDB
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - "Percona-Server-server-56"
    - "Percona-Server-client-56"
    - "Percona-Server-shared-56"
    - "MySQL-python"

- name: PERCONA | Enabling and starting PERCONA
  service:
    name: mysql
    enabled: yes
    state: started

- name: PERCONA | Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False

- name: PERCONA | Get list of hosts for the root user
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = "root" ORDER BY (Host="localhost") ASC'
  register: percona_root_hosts
  changed_when: false

# Note: We do not use mysql_user for this operation, as it doesn't always update
# the root password correctly. See: https://goo.gl/MSOejW
- name: PERCONA | Update MySQL root password for localhost root account
  shell: >
    mysql -u root -NBe
    'SET PASSWORD FOR "{{ percona_root_username }}"@"{{ item }}" = PASSWORD("{{ percona_root_password }}");'
  with_items: "{{ percona_root_hosts.stdout_lines }}"
  # when: mysql_install_packages | bool or mysql_root_password_update

# Has to be after the root password assignment, for idempotency.
- name: PERCONA | Copy .my.cnf file with root password credentials
  template:
    src: "user_cnf.j2"
    dest: "{{ percona_user_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600

- name: PERCONA | Get list of hosts for the anonymous user
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false

- name: PERCONA | Remove anonymous MySQL users
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines }}"

- name: PERCONA | Remove MySQL test database
  mysql_db: "name='test' state=absent"

- name: PERCONA | Ensure MySQL databases are present
  mysql_db:
    name: "{{ item.name }}"
    # collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: present
  with_items: "{{ percona_databases }}"

- name: PERCONA | Add user
  mysql_user:
    name: "{{ percona_user_name }}"
    password: "{{ percona_user_password }}"
    priv: "{{ percona_user_priv }}"
    host: "{{ item }}"
  with_items: "{{ percona_user_host }}"